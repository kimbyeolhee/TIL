{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"TF Certificate 5.2_Sequence data (household electric power consumption).ipynbipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOlgfWuOASD7il+hpUvbnYl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"wamoIgcrYFr3"},"source":["# Category 5\n","\n","`Individual House Hold Electric Power Consumption Dataset`을 활용한 예측"]},{"cell_type":"markdown","metadata":{"id":"sb3JhlS5YJ_Y"},"source":["ABOUT THE DATASET\n","\n","Original Source:\n","https://archive.ics.uci.edu/ml/datasets/individual+household+electric+power+consumption\n","\n","The original 'Individual House Hold Electric Power Consumption Dataset'\n","has Measurements of electric power consumption in one household with\n","a one-minute sampling rate over a period of almost 4 years.\n","\n","Different electrical quantities and some sub-metering values are available.\n","\n","For the purpose of the examination we have provided a subset containing\n","the data for the first 60 days in the dataset. We have also cleaned the\n","dataset beforehand to remove missing values. The dataset is provided as a\n","csv file in the project.\n","\n","The dataset has a total of 7 features ordered by time.\n","==============================================================================\n","\n","INSTRUCTIONS\n","\n","Complete the code in following functions:\n","1. windowed_dataset()\n","2. solution_model()\n","\n","The model input and output shapes must match the following\n","specifications.\n","\n","1. Model input_shape must be (BATCH_SIZE, N_PAST = 24, N_FEATURES = 7),\n","   since the testing infrastructure expects a window of past N_PAST = 24\n","   observations of the 7 features to predict the next 24 observations of\n","   the same features.\n","\n","2. Model output_shape must be (BATCH_SIZE, N_FUTURE = 24, N_FEATURES = 7)\n","\n","3. DON'T change the values of the following constants\n","   N_PAST, N_FUTURE, SHIFT in the windowed_dataset()\n","   BATCH_SIZE in solution_model() (See code for additional note on\n","   BATCH_SIZE).\n","4. Code for normalizing the data is provided - DON't change it.\n","   Changing the normalizing code will affect your score.\n","\n","HINT: Your neural network must have a validation MAE of approximately 0.055 or\n","less on the normalized validation dataset for top marks.\n","\n","WARNING: Do not use lambda layers in your model, they are not supported\n","on the grading infrastructure.\n","\n","WARNING: If you are using the GRU layer, it is advised not to use the\n","'recurrent_dropout' argument (you can alternatively set it to 0),\n","since it has not been implemented in the cuDNN kernel and may\n","result in much longer training times."]},{"cell_type":"markdown","metadata":{"id":"_xSLSKbEYMWD"},"source":["# 1.import"]},{"cell_type":"code","metadata":{"id":"vDf42ugwX94Y","executionInfo":{"status":"ok","timestamp":1629996832424,"user_tz":-540,"elapsed":2965,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["import urllib\n","import os\n","import zipfile\n","import pandas as pd\n","\n","import tensorflow as tf\n","from tensorflow.keras.layers import Dense, Conv1D, LSTM\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.callbacks import ModelCheckpoint"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bxWMejAVZHpg"},"source":["# 2. Load dataset"]},{"cell_type":"code","metadata":{"id":"YKas90a3YbMR","executionInfo":{"status":"ok","timestamp":1629997030502,"user_tz":-540,"elapsed":314,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["def download_and_extract_data():\n","    url = 'https://storage.googleapis.com/download.tensorflow.org/data/certificate/household_power.zip'\n","    urllib.request.urlretrieve(url, 'household_power.zip')\n","    with zipfile.ZipFile('household_power.zip', 'r') as zip_ref:\n","        zip_ref.extractall()"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"3w9JwAFvZNmp","executionInfo":{"status":"ok","timestamp":1629997034866,"user_tz":-540,"elapsed":274,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["download_and_extract_data()"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":425},"id":"-sXAXkQ_ZOrg","executionInfo":{"status":"ok","timestamp":1629997112866,"user_tz":-540,"elapsed":282,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}},"outputId":"4ad0948f-32f7-43ba-d5ae-af2e5179b6e2"},"source":["df = pd.read_csv('household_power_consumption.csv', \n","                 sep=',',\n","                 infer_datetime_format=True,\n","                 index_col='datetime', header=0)\n","df.head()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Global_active_power</th>\n","      <th>Global_reactive_power</th>\n","      <th>Voltage</th>\n","      <th>Global_intensity</th>\n","      <th>Sub_metering_1</th>\n","      <th>Sub_metering_2</th>\n","      <th>Sub_metering_3</th>\n","    </tr>\n","    <tr>\n","      <th>datetime</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2006-12-16 17:24:00</th>\n","      <td>4.216</td>\n","      <td>0.418</td>\n","      <td>234.84</td>\n","      <td>18.4</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>2006-12-16 17:25:00</th>\n","      <td>5.360</td>\n","      <td>0.436</td>\n","      <td>233.63</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>16.0</td>\n","    </tr>\n","    <tr>\n","      <th>2006-12-16 17:26:00</th>\n","      <td>5.374</td>\n","      <td>0.498</td>\n","      <td>233.29</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>2006-12-16 17:27:00</th>\n","      <td>5.388</td>\n","      <td>0.502</td>\n","      <td>233.74</td>\n","      <td>23.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>2006-12-16 17:28:00</th>\n","      <td>3.666</td>\n","      <td>0.528</td>\n","      <td>235.68</td>\n","      <td>15.8</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>17.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                     Global_active_power  ...  Sub_metering_3\n","datetime                                  ...                \n","2006-12-16 17:24:00                4.216  ...            17.0\n","2006-12-16 17:25:00                5.360  ...            16.0\n","2006-12-16 17:26:00                5.374  ...            17.0\n","2006-12-16 17:27:00                5.388  ...            17.0\n","2006-12-16 17:28:00                3.666  ...            17.0\n","\n","[5 rows x 7 columns]"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"8YhtZoVqZjRA"},"source":["# 3. Preprocess"]},{"cell_type":"markdown","metadata":{"id":"NyW3nrNeZlaX"},"source":["## 3-1. Normalization"]},{"cell_type":"code","metadata":{"id":"2OXgzLfHZckI","executionInfo":{"status":"ok","timestamp":1629997144431,"user_tz":-540,"elapsed":268,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["def normalize_series(data, min, max):\n","    data = data - min\n","    data = data / max\n","    return data"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F54MSFShZpbg","executionInfo":{"status":"ok","timestamp":1629997203512,"user_tz":-540,"elapsed":317,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}},"outputId":"11b42d6c-2488-48db-bc64-bf0eddd850fd"},"source":["N_FEATURES = len(df.columns)\n","\n","# 데이터프레임을 numpy array으로 가져와 data에 대입\n","data = df.values\n","\n","# 데이터 정규화\n","data = normalize_series(data, data.min(axis=0), data.max(axis=0))\n","data"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.43377912, 0.47826087, 0.04036551, ..., 0.        , 0.01282051,\n","        0.85      ],\n","       [0.55716135, 0.49885584, 0.0355582 , ..., 0.        , 0.01282051,\n","        0.8       ],\n","       [0.55867127, 0.56979405, 0.03420739, ..., 0.        , 0.02564103,\n","        0.85      ],\n","       ...,\n","       [0.03710095, 0.        , 0.05983313, ..., 0.        , 0.        ,\n","        0.        ],\n","       [0.03559103, 0.        , 0.06515693, ..., 0.        , 0.        ,\n","        0.        ],\n","       [0.03774806, 0.        , 0.06730234, ..., 0.        , 0.01282051,\n","        0.        ]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"RB6BpdZXZ31X","executionInfo":{"status":"ok","timestamp":1629997261436,"user_tz":-540,"elapsed":251,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}},"outputId":"63b62370-9b9c-487b-f37b-56dc3e2c52b2"},"source":["pd.DataFrame(data).head()"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.433779</td>\n","      <td>0.478261</td>\n","      <td>0.040366</td>\n","      <td>0.435644</td>\n","      <td>0.0</td>\n","      <td>0.012821</td>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.557161</td>\n","      <td>0.498856</td>\n","      <td>0.035558</td>\n","      <td>0.549505</td>\n","      <td>0.0</td>\n","      <td>0.012821</td>\n","      <td>0.80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.558671</td>\n","      <td>0.569794</td>\n","      <td>0.034207</td>\n","      <td>0.549505</td>\n","      <td>0.0</td>\n","      <td>0.025641</td>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.560181</td>\n","      <td>0.574371</td>\n","      <td>0.035995</td>\n","      <td>0.549505</td>\n","      <td>0.0</td>\n","      <td>0.012821</td>\n","      <td>0.85</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.374461</td>\n","      <td>0.604119</td>\n","      <td>0.043703</td>\n","      <td>0.371287</td>\n","      <td>0.0</td>\n","      <td>0.012821</td>\n","      <td>0.85</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          0         1         2         3    4         5     6\n","0  0.433779  0.478261  0.040366  0.435644  0.0  0.012821  0.85\n","1  0.557161  0.498856  0.035558  0.549505  0.0  0.012821  0.80\n","2  0.558671  0.569794  0.034207  0.549505  0.0  0.025641  0.85\n","3  0.560181  0.574371  0.035995  0.549505  0.0  0.012821  0.85\n","4  0.374461  0.604119  0.043703  0.371287  0.0  0.012821  0.85"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"9MVVdWb1acnm"},"source":["### 3-2. 데이터 분할"]},{"cell_type":"code","metadata":{"id":"XFhmFHwpaEPo","executionInfo":{"status":"ok","timestamp":1629997378797,"user_tz":-540,"elapsed":240,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["split_time = int(len(data)*0.8)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"czfq_hWnaiqA","executionInfo":{"status":"ok","timestamp":1629997394460,"user_tz":-540,"elapsed":260,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["x_train = data[:split_time]\n","x_valid = data[split_time:]"],"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gvOCodn-ap3k"},"source":["### 3-3. Windowed Dataset 생성"]},{"cell_type":"code","metadata":{"id":"0hKICLX_ameg","executionInfo":{"status":"ok","timestamp":1629997545265,"user_tz":-540,"elapsed":296,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["def windowed_dataset(series, batch_size, n_past=24, n_future=24, shift=1):\n","  ds = tf.data.Dataset.from_tensor_slices(series)\n","  ds = ds.window(size=(n_past + n_future), shift=shift, drop_remainder=True)\n","  ds = ds.flat_map(lambda w: w.batch(n_past + n_future))\n","  ds = ds.shuffle(len(series))\n","  ds = ds.map(\n","      lambda w: (w[:n_past], w[n_past:])\n","  )\n","  return ds.batch(batch_size).prefetch(1)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"M19xzHBDbLSQ","executionInfo":{"status":"ok","timestamp":1629997755335,"user_tz":-540,"elapsed":254,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["BATCH_SIZE = 32 \n","N_PAST = 24 \n","N_FUTURE = 24 \n","SHIFT = 1 "],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CKOz99cmb-0R"},"source":["train_set , valid_set 생성"]},{"cell_type":"code","metadata":{"id":"W4P5SEcQb-lQ","executionInfo":{"status":"ok","timestamp":1629997789363,"user_tz":-540,"elapsed":254,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["train_set = windowed_dataset(series=x_train, \n","                             batch_size=BATCH_SIZE,\n","                             n_past=N_PAST, \n","                             n_future=N_FUTURE,\n","                             shift=SHIFT)\n","\n","valid_set = windowed_dataset(series=x_valid, \n","                             batch_size=BATCH_SIZE,\n","                             n_past=N_PAST, \n","                             n_future=N_FUTURE,\n","                             shift=SHIFT)"],"execution_count":14,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"u_QCuMbAcHad"},"source":["# 4. 모델 정의 "]},{"cell_type":"code","metadata":{"id":"lVDlO1yFcG2q","executionInfo":{"status":"ok","timestamp":1629997911348,"user_tz":-540,"elapsed":388,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["model = Sequential([\n","                    Conv1D(filters=32,\n","                           kernel_size=3,\n","                           padding='causal',\n","                           activation='relu',\n","                           input_shape=[N_PAST, 7]),\n","                    LSTM(32, return_sequences=True),\n","                    Dense(32, activation='relu'),\n","                    Dense(16, activation='relu'),\n","                    Dense(N_FEATURES)\n","])"],"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NouOMm08clVy"},"source":["# 5. ModelCheckpoint"]},{"cell_type":"code","metadata":{"id":"2aLaDbiPch5X","executionInfo":{"status":"ok","timestamp":1629997969876,"user_tz":-540,"elapsed":5,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["checkpoint_path = 'my_checkpoint.ckpt'\n","checkpoint = ModelCheckpoint(filepath=checkpoint_path,\n","                             save_weights_only=True,\n","                             save_best_only=True,\n","                             monitor='val_loss',\n","                             verbose=1)"],"execution_count":18,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TtLzY2YaczpU"},"source":["# 6. Compile\n"]},{"cell_type":"code","metadata":{"id":"OeTWu7BIcy9w","executionInfo":{"status":"ok","timestamp":1629998023778,"user_tz":-540,"elapsed":237,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}}},"source":["optimizer = tf.keras.optimizers.Adam(learning_rate=0.0005)\n","\n","model.compile(optimizer=optimizer,\n","              loss='mae',\n","              metrics=['mae'])"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oS42ceN5dA5-"},"source":["# 7. fit"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M5U2rezac-_I","executionInfo":{"status":"ok","timestamp":1629999449380,"user_tz":-540,"elapsed":1399068,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}},"outputId":"97ccb363-c8d0-4f81-ed89-7eaac593c920"},"source":["model.fit(train_set,\n","          validation_data= (valid_set),\n","          epochs=20,\n","          callbacks=[checkpoint])"],"execution_count":21,"outputs":[{"output_type":"stream","text":["Epoch 1/20\n","2159/2159 [==============================] - 50s 18ms/step - loss: 0.0586 - mae: 0.0586 - val_loss: 0.0537 - val_mae: 0.0537\n","\n","Epoch 00001: val_loss improved from inf to 0.05373, saving model to my_checkpoint.ckpt\n","Epoch 2/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0537 - mae: 0.0537 - val_loss: 0.0529 - val_mae: 0.0529\n","\n","Epoch 00002: val_loss improved from 0.05373 to 0.05286, saving model to my_checkpoint.ckpt\n","Epoch 3/20\n","2159/2159 [==============================] - 48s 18ms/step - loss: 0.0529 - mae: 0.0529 - val_loss: 0.0524 - val_mae: 0.0524\n","\n","Epoch 00003: val_loss improved from 0.05286 to 0.05238, saving model to my_checkpoint.ckpt\n","Epoch 4/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0524 - mae: 0.0524 - val_loss: 0.0522 - val_mae: 0.0522\n","\n","Epoch 00004: val_loss improved from 0.05238 to 0.05217, saving model to my_checkpoint.ckpt\n","Epoch 5/20\n","2159/2159 [==============================] - 48s 18ms/step - loss: 0.0521 - mae: 0.0521 - val_loss: 0.0516 - val_mae: 0.0516\n","\n","Epoch 00005: val_loss improved from 0.05217 to 0.05164, saving model to my_checkpoint.ckpt\n","Epoch 6/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0519 - mae: 0.0519 - val_loss: 0.0515 - val_mae: 0.0515\n","\n","Epoch 00006: val_loss improved from 0.05164 to 0.05148, saving model to my_checkpoint.ckpt\n","Epoch 7/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0517 - mae: 0.0517 - val_loss: 0.0514 - val_mae: 0.0514\n","\n","Epoch 00007: val_loss improved from 0.05148 to 0.05139, saving model to my_checkpoint.ckpt\n","Epoch 8/20\n","2159/2159 [==============================] - 54s 20ms/step - loss: 0.0516 - mae: 0.0516 - val_loss: 0.0515 - val_mae: 0.0515\n","\n","Epoch 00008: val_loss did not improve from 0.05139\n","Epoch 9/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0515 - mae: 0.0515 - val_loss: 0.0513 - val_mae: 0.0513\n","\n","Epoch 00009: val_loss improved from 0.05139 to 0.05126, saving model to my_checkpoint.ckpt\n","Epoch 10/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0514 - mae: 0.0514 - val_loss: 0.0513 - val_mae: 0.0513\n","\n","Epoch 00010: val_loss did not improve from 0.05126\n","Epoch 11/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0513 - mae: 0.0513 - val_loss: 0.0511 - val_mae: 0.0511\n","\n","Epoch 00011: val_loss improved from 0.05126 to 0.05114, saving model to my_checkpoint.ckpt\n","Epoch 12/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0513 - mae: 0.0513 - val_loss: 0.0512 - val_mae: 0.0512\n","\n","Epoch 00012: val_loss did not improve from 0.05114\n","Epoch 13/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0512 - mae: 0.0512 - val_loss: 0.0510 - val_mae: 0.0510\n","\n","Epoch 00013: val_loss improved from 0.05114 to 0.05098, saving model to my_checkpoint.ckpt\n","Epoch 14/20\n","2159/2159 [==============================] - 48s 18ms/step - loss: 0.0511 - mae: 0.0511 - val_loss: 0.0510 - val_mae: 0.0510\n","\n","Epoch 00014: val_loss did not improve from 0.05098\n","Epoch 15/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0510 - mae: 0.0510 - val_loss: 0.0511 - val_mae: 0.0511\n","\n","Epoch 00015: val_loss did not improve from 0.05098\n","Epoch 16/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0510 - mae: 0.0510 - val_loss: 0.0513 - val_mae: 0.0513\n","\n","Epoch 00016: val_loss did not improve from 0.05098\n","Epoch 17/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0509 - mae: 0.0509 - val_loss: 0.0509 - val_mae: 0.0509\n","\n","Epoch 00017: val_loss improved from 0.05098 to 0.05092, saving model to my_checkpoint.ckpt\n","Epoch 18/20\n","2159/2159 [==============================] - 49s 19ms/step - loss: 0.0509 - mae: 0.0509 - val_loss: 0.0508 - val_mae: 0.0508\n","\n","Epoch 00018: val_loss improved from 0.05092 to 0.05084, saving model to my_checkpoint.ckpt\n","Epoch 19/20\n","2159/2159 [==============================] - 48s 18ms/step - loss: 0.0508 - mae: 0.0508 - val_loss: 0.0510 - val_mae: 0.0510\n","\n","Epoch 00019: val_loss did not improve from 0.05084\n","Epoch 20/20\n","2159/2159 [==============================] - 47s 18ms/step - loss: 0.0507 - mae: 0.0507 - val_loss: 0.0509 - val_mae: 0.0509\n","\n","Epoch 00020: val_loss did not improve from 0.05084\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fa38014ed50>"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"fvhiLgbtdHn9"},"source":["# 8. load weights"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ES6dOAXWdGoI","executionInfo":{"status":"ok","timestamp":1629999450296,"user_tz":-540,"elapsed":34,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}},"outputId":"9b3d30a2-039f-4974-ba5a-15c6dc94e6ba"},"source":["model.load_weights(checkpoint_path)"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7fa37a3e5b90>"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"WHSONCt9dLo2"},"source":["# 모델 검증"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D40awalgdLOA","executionInfo":{"status":"ok","timestamp":1630000200212,"user_tz":-540,"elapsed":5225,"user":{"displayName":"김별희","photoUrl":"","userId":"06602448826503759202"}},"outputId":"5d6fe0d3-7aa7-4151-8a2d-2dd04ca53029"},"source":["model.evaluate(valid_set)"],"execution_count":24,"outputs":[{"output_type":"stream","text":["539/539 [==============================] - 5s 5ms/step - loss: 0.0508 - mae: 0.0508\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[0.05083582177758217, 0.05083581060171127]"]},"metadata":{},"execution_count":24}]}]}